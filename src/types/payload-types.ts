/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    subscriptions: Subscription;
    invoices: Invoice;
    'kaiju-activities': KaijuActivity;
    'trip-configs': TripConfig;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    subscriptions: SubscriptionsSelect<false> | SubscriptionsSelect<true>;
    invoices: InvoicesSelect<false> | InvoicesSelect<true>;
    'kaiju-activities': KaijuActivitiesSelect<false> | KaijuActivitiesSelect<true>;
    'trip-configs': TripConfigsSelect<false> | TripConfigsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role: 'admin' | 'user';
  /**
   * User workspace identifier
   */
  workspace?: string | null;
  /**
   * Stripe customer ID
   */
  stripeCustomerId?: string | null;
  /**
   * Current active subscription ID
   */
  stripeSubscriptionId?: string | null;
  /**
   * Current subscription status
   */
  subscriptionStatus?: ('free' | 'trialing' | 'active' | 'past_due' | 'canceled' | 'incomplete') | null;
  /**
   * Subscription tier level
   */
  subscriptionTier?: ('free' | 'basic' | 'pro' | 'enterprise') | null;
  /**
   * Email address for billing purposes
   */
  billingEmail?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: string;
  /**
   * User associated with this subscription
   */
  user: string | User;
  /**
   * Stripe subscription ID
   */
  stripeSubscriptionId: string;
  /**
   * Stripe customer ID
   */
  stripeCustomerId: string;
  /**
   * Stripe price ID for this subscription
   */
  stripePriceId: string;
  /**
   * Current subscription status
   */
  status: 'active' | 'canceled' | 'past_due' | 'trialing' | 'incomplete' | 'unpaid' | 'paused';
  /**
   * Start of the current billing period
   */
  currentPeriodStart?: string | null;
  /**
   * End of the current billing period
   */
  currentPeriodEnd?: string | null;
  /**
   * Whether subscription will be canceled at period end
   */
  cancelAtPeriodEnd?: boolean | null;
  /**
   * Date when subscription was canceled
   */
  canceledAt?: string | null;
  /**
   * Trial period start date
   */
  trialStart?: string | null;
  /**
   * Trial period end date
   */
  trialEnd?: string | null;
  /**
   * Additional metadata from Stripe
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices".
 */
export interface Invoice {
  id: string;
  /**
   * User associated with this invoice
   */
  user: string | User;
  /**
   * Subscription associated with this invoice (if any)
   */
  subscription?: (string | null) | Subscription;
  /**
   * Stripe invoice ID
   */
  stripeInvoiceId: string;
  /**
   * Stripe customer ID
   */
  stripeCustomerId: string;
  /**
   * Amount in cents
   */
  amount: number;
  /**
   * Currency code (e.g., usd, eur)
   */
  currency?: string | null;
  /**
   * Invoice status
   */
  status: 'draft' | 'open' | 'paid' | 'void' | 'uncollectible';
  /**
   * Whether the invoice has been paid
   */
  paid?: boolean | null;
  /**
   * URL to view the invoice in Stripe
   */
  invoiceUrl?: string | null;
  /**
   * URL to download invoice PDF
   */
  pdfUrl?: string | null;
  /**
   * Invoice due date
   */
  dueDate?: string | null;
  /**
   * Date when invoice was paid
   */
  paidAt?: string | null;
  /**
   * Additional metadata from Stripe
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "kaiju-activities".
 */
export interface KaijuActivity {
  id: string;
  /**
   * Activity title (e.g., "Explore Shibuya Crossing")
   */
  title: string;
  /**
   * Optional description of the activity
   */
  description?: string | null;
  /**
   * Time in HH:MM format (e.g., "14:30")
   */
  time?: string | null;
  /**
   * Whether this activity has a specific time
   */
  hasTime?: boolean | null;
  category?: ('cultural' | 'food' | 'nature' | 'shopping' | 'entertainment' | 'transport') | null;
  /**
   * Day index (0-15) for 16-day trip
   */
  dayIndex: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trip-configs".
 */
export interface TripConfig {
  id: string;
  /**
   * Trip title (e.g., "Japan Adventure 2024")
   */
  title: string;
  /**
   * Optional trip description
   */
  description?: string | null;
  /**
   * Trip start date
   */
  startDate: string;
  /**
   * Total number of days in the trip
   */
  numberOfDays: number;
  /**
   * Day-by-day trip configuration
   */
  days: {
    /**
     * Location name (e.g., "Tokyo", "Shibuya District")
     */
    location: string;
    /**
     * City category for styling and grouping
     */
    city: 'tokyo' | 'kyoto' | 'osaka' | 'fuji' | 'custom';
    /**
     * Phase description (e.g., "Arrival & First Exploration")
     */
    phase: string;
    /**
     * Custom city name (required when city is "custom")
     */
    customCityName?: string | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'subscriptions';
        value: string | Subscription;
      } | null)
    | ({
        relationTo: 'invoices';
        value: string | Invoice;
      } | null)
    | ({
        relationTo: 'kaiju-activities';
        value: string | KaijuActivity;
      } | null)
    | ({
        relationTo: 'trip-configs';
        value: string | TripConfig;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  workspace?: T;
  stripeCustomerId?: T;
  stripeSubscriptionId?: T;
  subscriptionStatus?: T;
  subscriptionTier?: T;
  billingEmail?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions_select".
 */
export interface SubscriptionsSelect<T extends boolean = true> {
  user?: T;
  stripeSubscriptionId?: T;
  stripeCustomerId?: T;
  stripePriceId?: T;
  status?: T;
  currentPeriodStart?: T;
  currentPeriodEnd?: T;
  cancelAtPeriodEnd?: T;
  canceledAt?: T;
  trialStart?: T;
  trialEnd?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices_select".
 */
export interface InvoicesSelect<T extends boolean = true> {
  user?: T;
  subscription?: T;
  stripeInvoiceId?: T;
  stripeCustomerId?: T;
  amount?: T;
  currency?: T;
  status?: T;
  paid?: T;
  invoiceUrl?: T;
  pdfUrl?: T;
  dueDate?: T;
  paidAt?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "kaiju-activities_select".
 */
export interface KaijuActivitiesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  time?: T;
  hasTime?: T;
  category?: T;
  dayIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trip-configs_select".
 */
export interface TripConfigsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  startDate?: T;
  numberOfDays?: T;
  days?:
    | T
    | {
        location?: T;
        city?: T;
        phase?: T;
        customCityName?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}